version: '3.7'
services:
  broadcast:
    build:
      context: .
      args:
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    restart: on-failure
    ports:
      - '9000:9000'
    command: [ 'sh', '-c', 'yarn broadcast' ]
    networks:
      - common_network
    volumes:
      - ./:/var/history-tools

  boot:
    build:
      context: .
      args:
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    restart: on-failure
    command: [ 'sh', '-c', 'yarn boot' ]
    depends_on:
      - broadcast
      - db-history
    networks:
      - common_network
    volumes:
      - ./:/var/history-tools

  reader:
    build:
      context: .
      args:
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    restart: on-failure
    command: [ 'sh', '-c', 'yarn reader' ]
    depends_on:
      - broadcast
      - db-history
    networks:
      - common_network
    volumes:
      - ./:/var/

  filter:
    build:
      context: .
      args:
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    restart: on-failure
    command: [ 'sh', '-c', 'yarn filter' ]
    depends_on:
      - broadcast
      - db-history
    networks:
      - common_network
    volumes:
      - ./:/var/
  cron:
    build:
      context: .
      args:
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    restart: on-failure
    command: [ 'sh', '-c', 'yarn cron' ]
    networks:
      - common_network
    volumes:
      - ./:/var/

  processor:
    build:
      context: .
      args:
        - GITHUB_TOKEN=${GITHUB_TOKEN}
    restart: on-failure
    command: [ 'sh', '-c', 'yarn processor' ]
    depends_on:
      - broadcast
      - db-history
    networks:
      - common_network
    volumes:
      - ./:/var/history-tools

  db-history:
    image: mongo
    restart: always
    ports:
      - '27017:27017'
    expose:
      - 27017
    networks:
      - common_network
    volumes:
      - database:/data/db-history

volumes:
  database:
networks:
  common_network:


